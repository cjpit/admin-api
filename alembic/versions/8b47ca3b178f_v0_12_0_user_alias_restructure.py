"""v0.12.0 User/alias restructure

Revision ID: 8b47ca3b178f
Revises: 344144652f30
Create Date: 2020-11-02 11:33:07.415688

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

from tools.constants import PropTags as PT
from tools.rop import ntTime

import time

# revision identifiers, used by Alembic.
revision = '8b47ca3b178f'
down_revision = '344144652f30'
branch_labels = None
depends_on = None

columns = (("id", None),
           ("address_type", None),
           ("sub_type", PT.DISPLAYTYPEEX),
           ("real_name", PT.DISPLAYNAME),
           ("title", PT.TITLE),
           ("memo", PT.COMMENT),
           ("create_day", PT.CREATIONTIME),
           ("lang", PT.LANGUAGE),
           ("mobile_phone", PT.MOBILETELEPHONENUMBER),
           ("tel", PT.PRIMARYTELEPHONENUMBER),
           ("nickname", PT.NICKNAME),
           ("homeaddress", PT.POSTALADDRESS))

def mkValue(tag, res, i):
    if tag == PT.DISPLAYTYPEEX:
        return "1" if res[1] == 2 else "7" if res[2] == 1 else "8" if res[2] == 2 else "0"
    elif tag == PT.CREATIONTIME:
        return str(ntTime(time.mktime(res[i].timetuple())))
    else:
        return str(res[i])



def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_properties',
    sa.Column('user_id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('proptag', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('propval_bin', sa.VARBINARY(length=4096), nullable=True),
    sa.Column('propval_str', sa.VARCHAR(length=4096), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'proptag')
    )
    op.create_index(op.f('ix_user_properties_proptag'), 'user_properties', ['proptag'], unique=False)
    connection = op.get_bind()
    UserProperties = sa.table("user_properties",
                              sa.Column("user_id", mysql.INTEGER(unsigned=True)),
                              sa.Column("proptag", mysql.INTEGER(unsigned=True)),
                              sa.Column("propval_str", sa.VARCHAR(length=4096)))
    connection.execute("DELETE from users WHERE address_type IN (1, 3);")
    connection.execute("DELETE from domains WHERE domain_type=1;")
    connection.execute("DELETE from aliases WHERE mainname NOT LIKE '%%@%%';")
    results = connection.execute("SELECT {} FROM users;".format(",".join((c[0] for c in columns)))).fetchall()
    probberties = [{"user_id": res[0],
                    "proptag": columns[i][1],
                    "propval_str": mkValue(columns[i][1], res, i)} for res in results for i in range(len(columns))
                   if columns[i][1] is not None and len(str(res[i]))]
    op.bulk_insert(UserProperties, probberties)
    op.drop_index('id', table_name='aliases')
    op.create_foreign_key(None, 'aliases', 'users', ['mainname'], ['username'], onupdate='cascade', ondelete='cascade')
    op.drop_column('aliases', 'id')
    op.alter_column('domains', 'end_day',
               existing_type=sa.DATE(),
               server_default='3333-03-03',
               existing_nullable=False)
    op.drop_index('Domains.homedir', table_name='domains')
    op.drop_column('domains', 'domain_type')
    op.drop_column('domains', 'password')
    op.drop_column('domains', 'privilege_bits')
    op.drop_column('domains', 'media')
    op.drop_column('groups', 'privilege_bits')
    op.drop_column('groups', 'password')
    op.drop_index('Users.maildir', table_name='users')
    op.drop_column('users', 'mobile_phone')
    op.drop_column('users', 'max_file')
    op.drop_column('users', 'title')
    op.drop_column('users', 'address_type')
    op.drop_column('users', 'homeaddress')
    op.drop_column('users', 'tel')
    op.drop_column('users', 'real_name')
    op.drop_column('users', 'lang')
    op.drop_column('users', 'privilege_bits')
    op.drop_column('users', 'memo')
    op.drop_column('users', 'timezone')
    op.drop_column('users', 'cell')
    op.drop_column('users', 'create_day')
    op.drop_column('users', 'sub_type')
    op.drop_column('users', 'nickname')
    op.drop_column('users', 'max_size')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('max_size', mysql.INTEGER(display_width=10, unsigned=True), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('nickname', mysql.VARCHAR(length=32), server_default=sa.text("''"), nullable=False))
    op.add_column('users', sa.Column('sub_type', mysql.TINYINT(display_width=4), server_default=sa.text("'0'"), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('create_day', sa.DATE(), nullable=False))
    op.add_column('users', sa.Column('cell', mysql.VARCHAR(length=20), server_default=sa.text("''"), nullable=False))
    op.add_column('users', sa.Column('timezone', mysql.VARCHAR(length=64), server_default=sa.text("''"), nullable=False))
    op.add_column('users', sa.Column('memo', mysql.VARCHAR(length=128), server_default=sa.text("''"), nullable=False))
    op.add_column('users', sa.Column('privilege_bits', mysql.INTEGER(display_width=10, unsigned=True), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('lang', mysql.VARCHAR(length=32), server_default=sa.text("''"), nullable=False))
    op.add_column('users', sa.Column('real_name', mysql.VARCHAR(length=32), server_default=sa.text("''"), nullable=False))
    op.add_column('users', sa.Column('tel', mysql.VARCHAR(length=20), server_default=sa.text("''"), nullable=False))
    op.add_column('users', sa.Column('homeaddress', mysql.VARCHAR(length=128), server_default=sa.text("''"), nullable=False))
    op.add_column('users', sa.Column('address_type', mysql.TINYINT(display_width=4), server_default=sa.text("'0'"), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('title', mysql.VARCHAR(length=128), server_default=sa.text("''"), nullable=False))
    op.add_column('users', sa.Column('max_file', mysql.INTEGER(display_width=10, unsigned=True), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('mobile_phone', mysql.VARCHAR(length=20), server_default=sa.text("''"), nullable=False))
    op.create_index('Users.maildir', 'users', ['address_type'], unique=False)
    op.add_column('groups', sa.Column('password', mysql.VARCHAR(length=40), server_default=sa.text("''"), nullable=False))
    op.add_column('groups', sa.Column('privilege_bits', mysql.INTEGER(display_width=10, unsigned=True), autoincrement=False, nullable=False))
    op.add_column('groups', sa.Column('max_size', mysql.INTEGER(display_width=10, unsigned=True), server_default=sa.text("'0'"), autoincrement=False, nullable=False))
    op.add_column('domains', sa.Column('media', mysql.VARCHAR(length=64), server_default=sa.text("''"), nullable=False))
    op.add_column('domains', sa.Column('privilege_bits', mysql.INTEGER(display_width=10, unsigned=True), autoincrement=False, nullable=False))
    op.add_column('domains', sa.Column('password', mysql.VARCHAR(length=40), server_default=sa.text("''"), nullable=False))
    op.add_column('domains', sa.Column('domain_type', mysql.TINYINT(display_width=4), server_default=sa.text("'0'"), autoincrement=False, nullable=False))
    op.create_index('Domains.homedir', 'domains', ['domain_type'], unique=False)
    op.alter_column('domains', 'end_day',
               existing_type=sa.DATE(),
               server_default=sa.text("'3333-03-03'"),
               existing_nullable=False)
    op.add_column('aliases', sa.Column('id', mysql.INTEGER(display_width=10, unsigned=True), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'aliases', type_='foreignkey')
    op.create_index('id', 'aliases', ['id'], unique=True)
    op.drop_index(op.f('ix_user_properties_proptag'), table_name='user_properties')
    op.drop_table('user_properties')
    # ### end Alembic commands ###
